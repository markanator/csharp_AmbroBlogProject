@using AmbroBlogProject.Enums
@model AmbroBlogProject.Models.Post

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Post</h4>
<hr />
<div class="container mx-auto row">
    <div class="col mb-4">
        <form asp-action="Create" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="BlogId" class="control-label"></label>
                <select asp-for="BlogId" class ="form-control" asp-items="ViewBag.BlogId"></select>
            </div>

            <div class="form-group">
                <label asp-for="Title" class="control-label"></label>
                <input asp-for="Title" class="form-control" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Abstract" class="control-label"></label>
                <textarea asp-for="Abstract" class="form-control" ></textarea>
                <span asp-validation-for="Abstract" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Content" class="control-label"></label>
                <textarea asp-for="Content" class="form-control" ></textarea>
                <span asp-validation-for="Content" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Image" class="control-label"></label>
                <input type="file" asp-for="Image" class="form-control" accept=".jpg,.jpeg,.png,.gif" />
                <span asp-validation-for="Image" class="text-danger"></span>
            </div>

            <div class="form-group">
                <div class="row">
                    <div class="col">
                        <label class="form-label">Manage Tags</label>
                    </div>
                </div>
                <div class="row">
                    <div class="col">
                        <div class="row mb-2">
                            <div class="col">
                                <input type="text" class="form-control" id="TagEntry"/>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col">
                                <button onclick="AddTag()" type="button" name="Add" class="w-100 btn btn-dark btn-sm">Add</button>
                            </div>
                            <div class="col">
                                <button onclick="DeleteTag()" type="button" name="Delete" class="w-100 btn btn-dark btn-sm">Delete</button>
                            </div>
                        </div>
                    </div>
                    <div class="col">
                        <select class="w-100" name="tagValues" id="tagValues" multiple></select>
                    </div>
                </div>
            </div>

            
            <div class="form-group">
                <label asp-for="ReadyStatus" class="control-label"></label>
                <select asp-for="ReadyStatus" asp-items="@Html.GetEnumSelectList<ReadyStatus>()" class="form-control"></select>
                <span asp-validation-for="ReadyStatus" class="text-danger"></span>
            </div>

            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary w-100" />
            </div>
        </form>
    
    
    <div class="d-flex justify-content-end">
        <a asp-action="Index">Back to List</a>
    </div>
    </div>
</div>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
        $('#Content').summernote({
            placeholder: "Post Content",
            tabsize: 2,
            height: 300,                 // set editor height
            minHeight: null,             // set minimum height of editor
            maxHeight: null,             // set maximum height of editor
            focus: false                  // set focus to editable area after initializing summernote
        });
    </script>
}
